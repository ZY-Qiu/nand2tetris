// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address, a=aa, b=ba, c=ca, d=da, e=ea, f=fa, g=ga, h=ha);
    Register(in=in, load=aa, out=aout);
    Register(in=in, load=ba, out=bout);
    Register(in=in, load=ca, out=cout);
    Register(in=in, load=da, out=dout);
    Register(in=in, load=ea, out=eout);
    Register(in=in, load=fa, out=fout);
    Register(in=in, load=ga, out=gout);
    Register(in=in, load=ha, out=hout);
    Mux8Way16(a=aout, b=bout, c=cout, d=dout, e=eout, f=fout, g=gout, h=hout, sel=address, out=out);
}